package com.java.MyProject;

public class MaxMin {
	public static void main(String[] args) {
		int numbers[]= {3,9,-1,8,2,-6};
		
	    quicksort(numbers,0,numbers.length-1);


	System.out.println("Max element: "+ numbers[0]);
	System.out.println("Min element: "+ numbers[numbers.length-1]);}  // no iteration required

	 
	  private static void quicksort(int[] array, int lowIndex, int highIndex) {

	    if (lowIndex >= highIndex) {
	      return; }
	    

	    int pivotIndex = highIndex;
	    int pivot = array[pivotIndex];
	    swap(array, pivotIndex, highIndex);

	    int leftPointer = partition(array, lowIndex, highIndex, pivot);

	    quicksort(array, lowIndex, leftPointer - 1);
	    quicksort(array, leftPointer + 1, highIndex);

	  }

	  private static int partition(int[] array, int lowIndex, int highIndex, int pivot) {
	    int leftPointer = lowIndex;
	    int rightPointer = highIndex - 1;

	    while (leftPointer < rightPointer) {


	      while (array[leftPointer] <= pivot && leftPointer < rightPointer) {
	        leftPointer++;
	      }


	      while (array[rightPointer] >= pivot && leftPointer < rightPointer) {
	        rightPointer--;
	      }

	      swap(array, leftPointer, rightPointer);
	    }
	   
	    if(array[leftPointer] > array[highIndex]) {
	      swap(array, leftPointer, highIndex);
	    }
	    else {
	      leftPointer = highIndex;
	    }
	    
	    return leftPointer;
	  }

	  private static void swap(int[] array, int index1, int index2) {
	    int temp = array[index1];
	    array[index1] = array[index2];
	    array[index2] = temp;
	  
	}
	
}
