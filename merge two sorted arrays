package com.java.MyProject;


public class MergeTwoSortedArrays{
	
    public static int[] mergeSortedArrays(int arr1[], int arr2[], int m, int n) {
        
	int pointer1= m-1;  //pointing at at end of arr1 instead of 0
	int pointer2= n-1; // at end of arr2
	
	int i = n+m-1; // at end of arr1 with 0s
	
while(pointer2>=0 && pointer1>=0) {// loop until array does not go out of bounds
		
		if(arr1[pointer1]> arr2[pointer2]) { // if arr1 has higher element than arr2
			arr1[i]= arr1[pointer1]; 	// then at 0s put that value
			i--;
			pointer1--;		}

		else {
			arr1[i]= arr2[pointer2];// vice versa
			i--;
			pointer2--;	}} 
	
while(pointer1>=0) {   // when both arrays have diff. length, then one array will go out of bounds earlier
	arr1[i]= arr1[pointer1];// then as arrays are already sorted
    i--;             //put elements in first array
    pointer1--;}


while(pointer2>=0) {
	arr1[i]=arr2[pointer2];
    i--;
    pointer2--;}


return arr1;
    }
 


import java.util.*;
public class Solution {
    public static List< Integer > sortedArray(int []a, int []b) {
        
        ArrayList<Integer> list = new ArrayList<>();

        int i= 0, j=0;

        int aSize=a.length, bSize= b.length;

        while(i<aSize&& j<bSize){

if(a[i]> b[j] ){
    if( list.size()==0|| list.get(list.size()-1)!= b[j]){// last element in list must not be equal to current element
    list.add(b[j]);}
    j++;
}

else{
    if(list.size()==0|| list.get(list.size()-1)!= a[i]){
    list.add(a[i]);}
    i++;
}}


while(i<aSize){
     if(list.get(list.size()-1)!= a[i]){
        list.add(a[i]);}
        i++;
    
}

while(j<bSize){
 if(list.get(list.size()-1)!= b[j]){ 
        list.add(b[j]);}
        j++;} 



return list;
    }
}


// when one array cannot accomodate both elements of array

import java.util.Arrays;

public class Solution {
    public static void mergeTwoSortedArraysWithoutExtraSpace(long []a, long []b){
      int i= a.length;
      int j= b.length;
      int left= i-1;
      int right= 0;



while(left>=0&& right<j){

    if(a[left]>b[right]){
        long temp = a[left];
        a[left]= b[right];
        b[right]= temp;

left--;
right++;}

else{
    break;}} // as both arrays have correct elements

    Arrays.sort(a);
     Arrays.sort(b);}

    
}
