import java.util.*;

public class Solution {
    public static int findPages(ArrayList<Integer> arr, int n, int m) {
        if (m > n) return -1;

        int low = Collections.max(arr);
        int high = arr.stream().mapToInt(Integer::intValue).sum();
        int result = high;

        while (low <= high) {
            int mid = low + (high - low) / 2;

            if (isPossible(arr, mid, m)) {
                result = mid;
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }
        return result;
    }

    public static boolean isPossible(ArrayList<Integer> arr, int maxPages, int totalStudents) {
        int students = 1;
        int pages = 0;

        for (int i = 0; i < arr.size(); i++) {
            if (pages + arr.get(i) <= maxPages) {
                pages += arr.get(i);
            } else {
                students++;
                pages = arr.get(i);
                if (students > totalStudents) return false;
            }
        }

        return true;
    }
}
