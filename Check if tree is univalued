package com.java.MyProject;

public class CheckIfTreeIsUnivalued {
	static class Node
	{
	    int data;
	    Node left;
	    Node right;}
	 
	
	static Node newNode(int data)
	{
	    Node temp = new Node();
	    temp.data = data;
	    temp.left = temp.right = null;
	    return (temp);
	}
	 
	
	static boolean isUnivalTree(Node root)
	{
	 
	    // If tree is an empty tree
	    if (root == null)
	    {
	        return true;
	    }
	 
	    // If all the nodes on the left subtree
	    // have not value equal to root node
	    if (root.left != null
	        && root.data != root.left.data)
	        return false;
	 
	    // If all the nodes on the left subtree
	    // have not value equal to root node
	    if (root.right != null
	        && root.data != root.right.data)
	        return false;
	 
	    // Recurse on left and right subtree
	    return isUnivalTree(root.left)
	           && isUnivalTree(root.right);
	}
	 

	public static void main(String[] args)
	{
	 
	    Node root = newNode(1);
	    root.left = newNode(1);
	    root.right = newNode(1);
	    root.left.left = newNode(1);
	    root.left.right = newNode(1);
	    root.right.right = newNode(1);
	 
	    System.out.println(isUnivalTree(root));
	   
	}
	
}
