package com.Myproject.java;
import java.util.*;


public class SearchInSortedRotatedArray {
public static void main(String[] args) {
	
	int arr[]= {7,8,1,3,5};
	int key = 3; 
	
	ArrayList<Integer> list = new ArrayList();
	list.add(7);
	list.add(8);
	list.add(1);
	list.add(3);
	list.add(5);
	
	 
System.out.println(findPosition(list, arr.length, key)); }




public static int findPosition(ArrayList<Integer> arr, int n, int k) {
	int low= 0;

	int high = n-1;
	
	
	while(low <= high) {
		int mid = low+ (high-low) /2;
		
		if(arr.get(mid)== k) {
		return mid; }
		
		if(arr.get(low) <= arr.get(mid)) {	// checking if left part is sorted or not
			
		if( k >=  arr.get(low) && k<=arr.get(mid) ) { // then key must be bigger than low and smaller than mid,
                                                     //then only key will be present at left side
			high = mid-1;  }
		
		else {
			low= mid+1; }}
		
		else {             // if left part is not sorted then right part must be sorted
			if(k >= arr.get(mid) && k <= arr.get(high) ) {   //then key must be bigger than mid and smaller than high,
                                                     //then only key will be present at right side
				low = mid+1; }
			
			else {
				high =  mid-1; }}} 
               return -1;  // if key is not found
 }

}
