class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        int n = nums.length;

        int ans[] = new int[k];
        HashMap<Integer, Integer> map = new HashMap<>();
        PriorityQueue<Integer> heap = new PriorityQueue<>((a, b) -> map.get(b) - map.get(a));
        // heap stores elements acc. to map frequency

        for (int i = 0; i < n; i++) {
            int curr = nums[i];

            map.put(curr, map.getOrDefault(curr, 0) + 1);
        }
        heap.addAll(map.keySet());

        for (int i = 0; i < k; i++) {
            ans[i] = heap.poll();
        }

        return ans;

    }
}
