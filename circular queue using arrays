package com.Myproject.java;

	
	class Queue{
   int size;
   int front = -1;
   int rear = -1;
   int[]array; 
	

public Queue (int size) {
    this.size = size;  
    array = new int [this.size];  }

public boolean IsFull() {
	if ((this.rear+1) % size == this.front){
	
	}return true; }

	
public void enQueue(int data) {
	
if( IsFull()) {
	System.out.println("Overflow");
	return;  }

if(this.front == -1) {
	front =0;  }
	this.rear = ((this.rear+1)%size);
	array[data]= rear;  }
			
public boolean IsEmpty() {
	if(this.front == -1) { 
	
	}return true;   }


public int deQueue() {
	if(IsEmpty()) {
		System.out.println("Underflow"); }
	
	int pop = array[this.front];
	
	if(this.front == this.rear) {
		this.front= this.rear = -1;    }
	
	else {
	this.front = (this.front+1)%size; }
	
	return pop;   }}


public class CircularQueuewithArrays {
public static void main(String[] args) {

Queue q= new Queue();
q.enQueue(2);
q.enQueue(6);

	
}

}

