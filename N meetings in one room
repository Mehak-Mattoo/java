
class Solution {
    // Function to find the maximum number of meetings that can be performed.
    public int maxMeetings(int start[], int end[]) {
        int n = start.length;
        List<int[]> meetings = new ArrayList<>();
        
        // Store meetings as pairs of (start, end)
        for (int i = 0; i < n; i++) {
            meetings.add(new int[]{start[i], end[i]});
        }
        
        // Sort meetings by end time
        meetings.sort(Comparator.comparingInt(a -> a[1]));
        
        int count = 1; // At least one meeting can be held
        int lastEndTime = meetings.get(0)[1];
        
        // Iterate through the sorted meetings
        for (int i = 1; i < n; i++) {
            if (meetings.get(i)[0] > lastEndTime) {
                count++;
                lastEndTime = meetings.get(i)[1]; // Update end time
            }
        }
        
        return count;
    }
}
