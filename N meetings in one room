

class Meeting {
    int start;
    int end;
    
    Meeting(int start, int end) {
        this.start = start;
        this.end = end;
    }
}

class Solution 
{
    
    public static int maxMeetings(int start[], int end[], int n)
    {
        
           Meeting[] meetings = new Meeting[n];
        
        // Create Meeting objects from start and end arrays
        for (int i = 0; i < n; i++) {
            meetings[i] = new Meeting(start[i], end[i]);
        }
        
     
       Arrays.sort(meetings, new Comparator<Meeting>() {
            // @Override
            public int compare(Meeting m1, Meeting m2) {
                return m1.end - m2.end;
            }
        });
        
        int lastEnd= meetings[0].end, count=1;
        
        
        for(int i=1;i<n;i++){
            if(meetings[i].start> lastEnd){
                count++;
                lastEnd= meetings[i].end;
            }
        }
        
        return count=1;
    }
}
