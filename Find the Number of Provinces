import java.util.*;

public class Solution {
    public static int findNumOfProvinces(int[][] roads, int n) {
        int provinces=0;
        int visited[]= new int[n];

        List<ArrayList<Integer>> list= new ArrayList<>();

//changing matrix into a adj list
for (int i = 0; i < n; i++) {
    list.add(new ArrayList<Integer>());
    
}

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if(i!=j && roads[i][j]==1){
                    list.get(i).add(j);
                    list.get(j).add(i);
                }
                
            }
        }


        for (int i = 0; i < n; i++) {

            if(visited[i]==0){
                provinces++;
                bfs(i, list,visited);
            }
            
        }

        return provinces;
    }


    public static void bfs(int curr, List<ArrayList<Integer>> list, int[]visited ){
 Queue<Integer> q = new LinkedList<>();

q.offer(curr);
visited[curr]=1;

while(!q.isEmpty()){
    int node= q.poll();

        for(int i:list.get(node)){
            if(visited[i]==0){
                visited[i]= 1;
                q.add(i);
            }

        }
    }

    
}}
