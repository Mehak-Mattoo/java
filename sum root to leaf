
class Solution {
    public int sumNumbers(TreeNode root) {
       return helper(root, 0); 
    }


public  static int helper(TreeNode root, int sum) {
	
	if(root== null) {
		return 0;}
	
	sum= sum*10 + root.val;
	
	
	if(root.right== null && root.left == null) {
		return sum;	}
	
	
	
	return helper(root.left, sum)+ helper(root.right, sum);}

}




class Solution { // with stringbuilder

    public int sumNumbers(TreeNode root) {

        return helper(root, new StringBuilder());

    }

    public int helper(TreeNode root, StringBuilder str) {
        if (root == null) {
            return 0;
        }

        str.append(root.val);

        if (root.left == null && root.right == null) { // when encountered a leaf node
            int sum = Integer.parseInt(str.toString());
            str.deleteCharAt(str.length() - 1); // delete the last num to reuse it
            return sum;
        }

        int left = helper(root.left, str);
        int right = helper(root.right, str);

        str.deleteCharAt(str.length() - 1); // when there are no children , going back , it deletes all last num

        return left + right;

    }
}
