class Solution {
    public int singleNumber(int[] nums) {
          int n = nums.length;


for(int i=0; i<nums.length; i++){// brute force
int count=0;
    for(int j=0; j<nums.length; j++){
if(nums[i]== nums[j]){
    count++;
}}
if(count==1){
    return nums[i];

}
}return -1;


HashMap<Integer, Integer> map = new HashMap<>();

for(int i=0; i<nums.length; i++){
 int value = map.getOrDefault(nums[i], 0);
            map.put(nums[i], value + 1);
}

for(Map.Entry<Integer, Integer> entry: map.entrySet()){
    if(entry.getValue()==1){
        return entry.getKey();
    }
}return -1;

int xor=0;
for(int i=0; i<nums.length; i++){
xor^= nums[i];
}
return xor;
    }
}
