/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        if(root==null|| root==p|| root==q){
            return root;
        }

        TreeNode left= lowestCommonAncestor(root.left, p, q); // look on the left and right
        TreeNode right= lowestCommonAncestor(root.right, p, q);

        if(left==null){ //// if element was not found in left subtree, then just return right & vice-versa
            return right;
        }

         if (right== null){
            return left;
        }

        return root; // element found

    }
}
