package com.java.MyProject;


public class NextPermutation {
public static void main(String[] args) {
	
	
	int arr[]= {1,3,2};
	
	
	NextPermutation(arr);
	 for (int i : arr) {
	      System.out.print(i + " ");
	    }
}

private static void NextPermutation(int[] permutation) {
	
	int index1= -1;
	int index2= -1;
	

	if(permutation== null|| permutation.length<=1){
		return;	}

	
	for (int i = permutation.length-2; i>=0; i--) {  // traverse from the end to get the first min value
		if(permutation[i] < permutation[i+1]) {
			index1= i;   // when found, store it and break
			break;}}
	
	if(index1== -1) {  // if not found, then it means that the array was in descending order
		reverse(permutation, 0, permutation.length-1);	}  // then simply return in ascending order
	
	
	else {   // when index1 was found
	for (int i = permutation.length-1; i>index1; i--) { // traverse again from end, to get a number higher
		if(permutation[i]> permutation[index1]) {  // than index1
			index2 = i;   // store its index and break
			break;   }}
		
	swap(permutation, index1, index2);   // simply swap to get the next greater permutation
	
	reverse(permutation, index1 +1, permutation.length-1);  // then reverse the elements after index1
	
	}}
	
	static void	swap (int []arr , int index1, int index2) {
		
	int temp = arr[index1];
	arr[index1]= arr[index2];
	arr[index2]= temp;}
	

	public static void reverse(int []arr , int index1, int index2) {
		while(index1< index2) {
		swap(arr, index1, index2);
		index1++;
		index2--; }
	
	
	

	
}
}
