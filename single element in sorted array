class Solution {
    public int singleNonDuplicate(int[] nums) {

        int n = nums.length;

        int low = 0, high = n - 1;

        while (low <= high) {
            int mid = (high + low) / 2;

            // Edge case: single element at start or end
            if (mid == 0 || mid == n - 1) {
                return nums[mid];
            }

            if (mid % 2 == 0 && nums[mid + 1] == nums[mid]) {
                low = mid + 2;

                // If mid is odd and pair matches, go right
            } else if (mid % 2 == 1 && nums[mid] == nums[mid - 1]) {
                low = mid + 1;
            } else {
                high = mid - 1;

            }
        }

        return nums[low];

    }
}
