import java.util.*;
public class Solution {
    public static int calculateMinPatforms(int at[], int dt[], int n) {
        Arrays.sort(at);
        Arrays.sort(dt);

        int platforms = 1; 
        int maxPlatforms = 1; 

        int i = 1; // Pointer for the departure array
        int j = 0; // Pointer for the arrival array

      
        while (i < at.length && j < dt.length) {
            // If a train is arriving before the previous train has departed,

            if (at[i] <= dt[j]) {
                platforms++;
                i++;
            }
            // If a train is departing before the next train arrives,
            // decrement the number of platforms needed 
            else {
                platforms--;
                j++;
            }


            maxPlatforms = Math.max(maxPlatforms, platforms);
        }

        return maxPlatforms;
    
    }
}
