/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution {
    public int sumOfLeftLeaves(TreeNode root) {

        int sum = 0;

         if (root == null) {
            return 0; // Base case: If the root is null, return 0
        }

        Queue<TreeNode> q= new LinkedList<>();

        q.offer(root);

        while(!q.isEmpty()){
            TreeNode temp = q.poll();

            if(temp.left!= null){
                q.add(temp.left);

                if(temp.left.left==null && temp.left.right==null){ // if left child is a leaf node
                    sum+= temp.left.val; // add its value
                }
            }

            if(temp.right!=null){
                q.add(temp.right);
            }
        }

        return sum;

    }
}
