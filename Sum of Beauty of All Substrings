class Solution {
    public int beautySum(String s) {

        int beauty = 0, n = s.length(), ans = 0;
        for(int i=0; i<n; i++){
        HashMap<Character, Integer> map = new HashMap();
        
        for(int j=i; j<n; j++){
        char curr= s.charAt(j);
        map.put(curr, map.getOrDefault(curr, 0)+1);

        
        int max = Integer.MIN_VALUE;
        int min = Integer.MAX_VALUE; 
        
        
        for(Map.Entry<Character, Integer> entry: map.entrySet()){
            int val = entry.getValue();
            max= Math.max(max, val); // get the max and min frequency
            min= Math.min(min, val);}

            beauty= max- min; // calculate beauty
            ans+= beauty;  } }

        return ans;



      // better runtime solution  
         int beauty=0, n= s.length(), ans=0;

         for(int i=0; i<n; i++){
             int arr[]= new int[26]; //using array
             for(int j=i; j<n; j++){
                 int curr= s.charAt(j)-'a'; // get numeric representation of char
                 arr[curr]++;

                 int freq []= frequency(arr);
                 int max= freq[0];
             int min= freq[1];

                 beauty= max-min;
                 ans+=beauty;

             }
   }return ans;
             }

     public static int[] frequency(int []arr){
        int n= arr.length, max=Integer.MIN_VALUE, min=Integer.MAX_VALUE;

         for(int i=0; i<n; i++){
             if(arr[i]>0){
             max= Math.max(max, arr[i]);
             min= Math.min(min, arr[i]); }}

 return new int []{max, min};


     }
 }

        }
}
