class Solution {
    public List<List<Integer>> subsetsWithDup(int[] nums) {
        Arrays.sort(nums);
        int n = nums.length;
        List<List<Integer>> big = new ArrayList<>();

        helper(0, nums, n, new ArrayList(), big);
        return big;

    }

    public static void helper(int i, int[] nums, int n, List<Integer> small, List<List<Integer>> big) {

        if (i == n) {
            big.add(new ArrayList<>(small));
            return;
        }
        small.add(nums[i]);
        helper(i + 1, nums, n, small, big);
        small.remove(small.size() - 1);

        while (i + 1 < n && nums[i] == nums[i + 1]) {
            i++;
        }
        helper(i + 1, nums, n, small, big);

    }

}
