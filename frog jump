import java.util.* ;
import java.io.*; 
public class Solution {
    public static int frogJump(int n, int heights[]) {
           int dp[]= new int [n];

           return helper( n-1,  dp, heights);
       }

       public static int helper(  int i, int [] dp, int []heights){

             if(i==0){ // cost of going to index 0-> 0== 0
                    return 0;
             }

             if(dp[i]!=0){
                    return dp[i];
             }

             int right= Integer.MAX_VALUE; // declaring globally to cal culate min at end

             int left= helper(i-1, dp, heights)+ Math.abs(heights[i]- heights[i-1]) ;

             if(i>1){
               right= helper(i-2, dp, heights)+ Math.abs(heights[i]- heights[i-2]);}


             return  dp[i]= Math.min(left, right);
              
       }

}
