package comIheritance.java;

abstract class School{ 
	abstract void print();

void print1() {
}}
class Teacher extends School{
	void print() {
		System.out.println("Hello to everyone");}
		void print1() {
			 System.out.println("Welcome to our school");}}

public class Sara {
public static void main(String[] args) {
		Teacher s = new Teacher ();
		s.print();
		s.print1();		
	}}

Interface
package comIheritance.java;

interface Animal{ 
	 void print();
}
interface Panda{
	void print1();
	}
class Tiger implements Animal, Panda {
public void print() {
	System.out.println("Pandas are big and black and white in color");}
	public void print1() {
		System.out.println("Tigers are orange with black stripes");	}}

public class Sara {
public static void main(String[] args) {
		Tiger s = new Tiger ();
		s.print();
		s.print1();		
}}


another example

interface Vegetables{
	String name1= "Brinjal";
}
interface Fruits{
	String name = "Peach";
}
class Tomato implements Vegetables, Fruits{
	public void run() {
		System.out.println("Tomato is both");
	}}

public class Zen {
public static void main(String[] args) {
Fruits v = new Tomato();
Vegetables w= new Tomato();
Tomato b = new Tomato();
b.run();
System.out.println(b.name1 + " is a fruit. "  +b.name+ " is a vegetable");
}}
