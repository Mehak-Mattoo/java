class Solution {
    public int romanToInt(String s) {

        int prev=0, ans=0;
         int n= s.length()-1;

        for(int i=n; i>=0; i--){
            int curr= getInt(s.charAt(i)); // get the interger form

            if(curr>= prev){ // VI-> 6  adding
                ans+= curr;  }
            
            else{ // IV-> 4  subtacting
                ans-=curr; }
            
            prev= curr; }

            return ans;
        }

        public static int getInt(char c){
            switch(c){
                case'I': return 1;
                case'V': return 5;
                case'X': return 10;
                case'L': return 50;
                case'C': return 100;
                case'D': return 500;
                case'M': return 1000;
                default: return 0;
            }
        }
        
        HashMap<Character, Integer> map= new HashMap();

        map.put('I', 1);
        map.put('V', 5);
        map.put('X', 10);
        map.put('L', 50);
        map.put('C', 100);
        map.put('D', 500);
        map.put('M', 1000);

        int prev=0;
        int ans=0;

        for(int i=n; i>=0; i--){
            char c= s.charAt(i);
            int curr= map.get(c);

            if(curr>= prev){
                ans+=curr; }
            
            else{
                ans-= curr; }

            prev= curr; }

return ans;

    }       
    
}
