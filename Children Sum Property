import java.util.*;


public class Solution {
    public static boolean isParentSum(Node root) {
        Queue<Node> q = new LinkedList<>();

        if (root == null) {
            return true; // Empty tree satisfies the condition
        }

        q.offer(root);

        while (!q.isEmpty()) {
            Node curr = q.poll();

            // Check if the current node is a leaf node
            if (curr.left == null && curr.right == null) {
                continue; // Skip leaf nodes, as they don't need to satisfy the condition
            }

            // Calculate the sum of left and right child nodes
            int left=0, right = 0;
            if (curr.left != null) {
                q.offer(curr.left);
                left = curr.left.data;
            }
            if (curr.right != null) {
                q.offer(curr.right);
                right = curr.right.data;
            }

            // Check if the sum of child nodes is equal to the value of the parent node
            if (left+right != curr.data) {
                return false;
            }
        }

        return true; // All non-leaf nodes satisfy the condition
    }
}
