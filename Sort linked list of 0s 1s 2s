public class Solution

{

    public static Node sortList(Node head) {

        if(head==null || head.next==null){

            return head;

        }

        Node temp=head;

        Node zeroHead = new Node(-1);

        Node oneHead = new Node(-1);

        Node twoHead = new Node(-1);

        Node zero = zeroHead;

        Node one = oneHead;

        Node two = twoHead;

        

        while(temp!=null){

            if(temp.data==0){

                zero.next = temp;

                zero=zero.next;   

            }

            else if(temp.data==1){

                one.next=temp;

                one=one.next;

            }

            else{

                two.next=temp;

                two=two.next;

            }

        temp=temp.next;

            

        }

 

        zero.next=(oneHead.next!=null) ? (oneHead.next) : (twoHead.next);// zero will point to two if there are no 1s

        one.next=twoHead.next;

        two.next=null;

        Node newhead=zeroHead.next; // new head will point to whatever zerohead is pointing to

        return newhead;

    }

}
